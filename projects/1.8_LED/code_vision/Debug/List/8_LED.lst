
AVRASM ver. 2.1.30  D:\#Uni\#Terme 7\AZRiz\Projects\1.8_LED\code_vision\Debug\List\8_LED.asm Thu Nov 24 08:55:03 2022

D:\#Uni\#Terme 7\AZRiz\Projects\1.8_LED\code_vision\Debug\List\8_LED.asm(1087): warning: Register r4 already defined by the .DEF directive
D:\#Uni\#Terme 7\AZRiz\Projects\1.8_LED\code_vision\Debug\List\8_LED.asm(1088): warning: Register r5 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _i=R4
                 	.DEF _i_msb=R5
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0041 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
000033 0000      	.DB  0x0,0x0
                 
                 _0x2080060:
D:\#Uni\#Terme 7\AZRiz\Projects\1.8_LED\code_vision\Debug\List\8_LED.asm(1130): warning: .cseg .db misalignment - padding zero byte
000034 0001      	.DB  0x1
                 _0x2080000:
000035 4e2d
000036 4e41
000037 4900
000038 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\#Uni\#Terme 7\AZRiz\Projects\1.8_LED\code_vision\Debug\List\8_LED.asm(1133): warning: .cseg .db misalignment - padding zero byte
000039 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00003a 0002      	.DW  0x02
00003b 0004      	.DW  0x04
00003c 0066      	.DW  __REG_VARS*2
                 
00003d 0001      	.DW  0x01
00003e 0260      	.DW  __seed_G104
00003f 0068      	.DW  _0x2080060*2
                 
                 _0xFFFFFFFF:
000040 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000041 94f8      	CLI
000042 27ee      	CLR  R30
000043 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000044 e0f1      	LDI  R31,1
000045 bff5      	OUT  MCUCR,R31
000046 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000047 e08d      	LDI  R24,(14-2)+1
000048 e0a2      	LDI  R26,2
000049 27bb      	CLR  R27
                 __CLEAR_REG:
00004a 93ed      	ST   X+,R30
00004b 958a      	DEC  R24
00004c f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00004d e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00004e e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004f e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000050 93ed      	ST   X+,R30
000051 9701      	SBIW R24,1
000052 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000053 e7e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000054 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000055 9185      	LPM  R24,Z+
000056 9195      	LPM  R25,Z+
000057 9700      	SBIW R24,0
000058 f061      	BREQ __GLOBAL_INI_END
000059 91a5      	LPM  R26,Z+
00005a 91b5      	LPM  R27,Z+
00005b 9005      	LPM  R0,Z+
00005c 9015      	LPM  R1,Z+
00005d 01bf      	MOVW R22,R30
00005e 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005f 9005      	LPM  R0,Z+
000060 920d      	ST   X+,R0
000061 9701      	SBIW R24,1
000062 f7e1      	BRNE __GLOBAL_INI_LOOP
000063 01fb      	MOVW R30,R22
000064 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000065 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000066 bfed      	OUT  SPL,R30
000067 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000068 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000069 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00006a e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00006b 940c 006d 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include <math.h>
                 ;
                 ;int i = 0;
                 ;
                 ;void main(void)
                 ; 0000 0009 {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000A DDRA = 0xFF;
00006d efef      	LDI  R30,LOW(255)
00006e bbea      	OUT  0x1A,R30
                 ; 0000 000B 
                 ; 0000 000C     while (1)
                 _0x3:
                 ; 0000 000D     {
                 ; 0000 000E         for (i = 0;i < 4;i++) {
00006f 2444      	CLR  R4
000070 2455      	CLR  R5
                 _0x7:
000071 e0e4      	LDI  R30,LOW(4)
000072 e0f0      	LDI  R31,HIGH(4)
000073 164e      	CP   R4,R30
000074 065f      	CPC  R5,R31
000075 f544      	BRGE _0x8
                 ; 0000 000F 
                 ; 0000 0010             PORTA = pow(2,i) + pow(2,7-i);
000076 940e 0256 	CALL SUBOPT_0x0
000078 01f2      	MOVW R30,R4
000079 940e 025d 	CALL SUBOPT_0x1
00007b 937f      	PUSH R23
00007c 936f      	PUSH R22
00007d 93ff      	PUSH R31
00007e 93ef      	PUSH R30
00007f 940e 0256 	CALL SUBOPT_0x0
000081 e0e7      	LDI  R30,LOW(7)
000082 e0f0      	LDI  R31,HIGH(7)
000083 19e4      	SUB  R30,R4
000084 09f5      	SBC  R31,R5
000085 940e 025d 	CALL SUBOPT_0x1
000087 91af      	POP  R26
000088 91bf      	POP  R27
000089 918f      	POP  R24
00008a 919f      	POP  R25
00008b 940e 037e 	CALL __ADDF12
00008d 940e 030b 	CALL __CFD1U
00008f bbeb      	OUT  0x1B,R30
                 ; 0000 0011             delay_ms(100);
000090 e6a4      	LDI  R26,LOW(100)
000091 e0b0      	LDI  R27,0
000092 940e 02b1 	CALL _delay_ms
                 ; 0000 0012             PORTA = 0x00;
000094 e0e0      	LDI  R30,LOW(0)
000095 bbeb      	OUT  0x1B,R30
                 ; 0000 0013             delay_ms(100);
000096 e6a4      	LDI  R26,LOW(100)
000097 e0b0      	LDI  R27,0
000098 940e 02b1 	CALL _delay_ms
                 ; 0000 0014 
                 ; 0000 0015         };
00009a 01f2      	MOVW R30,R4
00009b 9631      	ADIW R30,1
00009c 012f      	MOVW R4,R30
00009d cfd3      	RJMP _0x7
                 _0x8:
                 ; 0000 0016 
                 ; 0000 0017     }
00009e cfd0      	RJMP _0x3
                 ; 0000 0018 }
                 _0x9:
00009f cfff      	RJMP _0x9
                 ; .FEND
                 ;
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0000a0 940e 04a7 	CALL __PUTPARD2
0000a2 817b         ldd  r23,y+3
0000a3 816a         ldd  r22,y+2
0000a4 81f9         ldd  r31,y+1
0000a5 81e8         ld   r30,y
0000a6 fb77         bst  r23,7
0000a7 0f77         lsl  r23
0000a8 fd67         sbrc r22,7
0000a9 6071         sbr  r23,1
0000aa 2f97         mov  r25,r23
0000ab 579e         subi r25,0x7e
0000ac f081         breq __ftrunc0
0000ad f078         brcs __ftrunc0
0000ae 3198         cpi  r25,24
0000af f490         brsh __ftrunc1
0000b0 27aa         clr  r26
0000b1 27bb         clr  r27
0000b2 2788         clr  r24
                 __ftrunc2:
0000b3 9408         sec
0000b4 9587         ror  r24
0000b5 95b7         ror  r27
0000b6 95a7         ror  r26
0000b7 959a         dec  r25
0000b8 f7d1         brne __ftrunc2
0000b9 23ea         and  r30,r26
0000ba 23fb         and  r31,r27
0000bb 2368         and  r22,r24
0000bc c005         rjmp __ftrunc1
                 __ftrunc0:
0000bd 94e8         clt
0000be 2777         clr  r23
0000bf 27ee         clr  r30
0000c0 27ff         clr  r31
0000c1 2766         clr  r22
                 __ftrunc1:
0000c2 776f         cbr  r22,0x80
0000c3 9576         lsr  r23
0000c4 f408         brcc __ftrunc3
0000c5 6860         sbr  r22,0x80
                 __ftrunc3:
0000c6 f977         bld  r23,7
0000c7 91a9         ld   r26,y+
0000c8 91b9         ld   r27,y+
0000c9 9189         ld   r24,y+
0000ca 9199         ld   r25,y+
0000cb 17ea         cp   r30,r26
0000cc 07fb         cpc  r31,r27
0000cd 0768         cpc  r22,r24
0000ce 0779         cpc  r23,r25
0000cf fb97         bst  r25,7
0000d0 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0000d1 940e 04a7 	CALL __PUTPARD2
0000d3 940e 0498 	CALL __GETD2S0
0000d5 940e 00a0 	CALL _ftrunc
0000d7 940e 049d 	CALL __PUTD1S0
0000d9 f419          brne __floor1
                 __floor0:
0000da 940e 0265 	CALL SUBOPT_0x2
0000dc c005      	RJMP _0x20A0004
                 __floor1:
0000dd f7e6          brtc __floor0
0000de 940e 0265 	CALL SUBOPT_0x2
0000e0 940e 0268 	CALL SUBOPT_0x3
                 _0x20A0004:
0000e2 9624      	ADIW R28,4
0000e3 9508      	RET
                 ; .FEND
                 _log:
                 ; .FSTART _log
0000e4 940e 04a7 	CALL __PUTPARD2
0000e6 9724      	SBIW R28,4
0000e7 931a      	ST   -Y,R17
0000e8 930a      	ST   -Y,R16
0000e9 940e 026f 	CALL SUBOPT_0x4
0000eb 940e 04bd 	CALL __CPD02
0000ed f02c      	BRLT _0x202000C
                +
0000ee efef     +LDI R30 , LOW ( 0xFF7FFFFF )
0000ef efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
0000f0 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
0000f1 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
0000f2 c073      	RJMP _0x20A0003
                 _0x202000C:
0000f3 940e 0274 	CALL SUBOPT_0x5
0000f5 940e 04a2 	CALL __PUTPARD1
0000f7 b7ad      	IN   R26,SPL
0000f8 b7be      	IN   R27,SPH
0000f9 9711      	SBIW R26,1
0000fa 931f      	PUSH R17
0000fb 930f      	PUSH R16
0000fc 940e 02bb 	CALL _frexp
0000fe 910f      	POP  R16
0000ff 911f      	POP  R17
000100 940e 0279 	CALL SUBOPT_0x6
000102 940e 026f 	CALL SUBOPT_0x4
                +
000104 efe3     +LDI R30 , LOW ( 0x3F3504F3 )
000105 e0f4     +LDI R31 , HIGH ( 0x3F3504F3 )
000106 e365     +LDI R22 , BYTE3 ( 0x3F3504F3 )
000107 e37f     +LDI R23 , BYTE4 ( 0x3F3504F3 )
                 	__GETD1N 0x3F3504F3
000108 940e 0461 	CALL __CMPF12
00010a f440      	BRSH _0x202000D
00010b 940e 027e 	CALL SUBOPT_0x7
00010d 940e 037e 	CALL __ADDF12
00010f 940e 0279 	CALL SUBOPT_0x6
                +
000111 5001     +SUBI R16 , LOW ( 1 )
000112 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
                 _0x202000D:
000113 940e 0274 	CALL SUBOPT_0x5
000115 940e 0268 	CALL SUBOPT_0x3
000117 937f      	PUSH R23
000118 936f      	PUSH R22
000119 93ff      	PUSH R31
00011a 93ef      	PUSH R30
00011b 940e 0274 	CALL SUBOPT_0x5
                +
00011d e0a0     +LDI R26 , LOW ( 0x3F800000 )
00011e e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00011f e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000120 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000121 940e 037e 	CALL __ADDF12
000123 91af      	POP  R26
000124 91bf      	POP  R27
000125 918f      	POP  R24
000126 919f      	POP  R25
000127 940e 041c 	CALL __DIVF21
000129 940e 0279 	CALL SUBOPT_0x6
00012b 940e 027e 	CALL SUBOPT_0x7
00012d 940e 0280 	CALL SUBOPT_0x8
                +
00012f e2a6     +LDI R26 , LOW ( 0x3F654226 )
000130 e4b2     +LDI R27 , HIGH ( 0x3F654226 )
000131 e685     +LDI R24 , BYTE3 ( 0x3F654226 )
000132 e39f     +LDI R25 , BYTE4 ( 0x3F654226 )
                 	__GETD2N 0x3F654226
000133 940e 0287 	CALL SUBOPT_0x9
                +
000135 e4ee     +LDI R30 , LOW ( 0x4054114E )
000136 e1f1     +LDI R31 , HIGH ( 0x4054114E )
000137 e564     +LDI R22 , BYTE3 ( 0x4054114E )
000138 e470     +LDI R23 , BYTE4 ( 0x4054114E )
                 	__GETD1N 0x4054114E
000139 940e 028c 	CALL SUBOPT_0xA
00013b 940e 026f 	CALL SUBOPT_0x4
00013d 940e 03ce 	CALL __MULF12
00013f 937f      	PUSH R23
000140 936f      	PUSH R22
000141 93ff      	PUSH R31
000142 93ef      	PUSH R30
000143 940e 0291 	CALL SUBOPT_0xB
                +
000145 e4ad     +LDI R26 , LOW ( 0x3FD4114D )
000146 e1b1     +LDI R27 , HIGH ( 0x3FD4114D )
000147 ed84     +LDI R24 , BYTE3 ( 0x3FD4114D )
000148 e39f     +LDI R25 , BYTE4 ( 0x3FD4114D )
                 	__GETD2N 0x3FD4114D
000149 940e 0377 	CALL __SUBF12
00014b 91af      	POP  R26
00014c 91bf      	POP  R27
00014d 918f      	POP  R24
00014e 919f      	POP  R25
00014f 940e 041c 	CALL __DIVF21
000151 937f      	PUSH R23
000152 936f      	PUSH R22
000153 93ff      	PUSH R31
000154 93ef      	PUSH R30
000155 01f8      	MOVW R30,R16
000156 940e 0489 	CALL __CWD1
000158 940e 0344 	CALL __CDF1
                +
00015a e1a8     +LDI R26 , LOW ( 0x3F317218 )
00015b e7b2     +LDI R27 , HIGH ( 0x3F317218 )
00015c e381     +LDI R24 , BYTE3 ( 0x3F317218 )
00015d e39f     +LDI R25 , BYTE4 ( 0x3F317218 )
                 	__GETD2N 0x3F317218
00015e 940e 03ce 	CALL __MULF12
000160 91af      	POP  R26
000161 91bf      	POP  R27
000162 918f      	POP  R24
000163 919f      	POP  R25
000164 940e 037e 	CALL __ADDF12
                 _0x20A0003:
000166 8119      	LDD  R17,Y+1
000167 8108      	LDD  R16,Y+0
000168 962a      	ADIW R28,10
000169 9508      	RET
                 ; .FEND
                 _exp:
                 ; .FSTART _exp
00016a 940e 04a7 	CALL __PUTPARD2
00016c 9728      	SBIW R28,8
00016d 931a      	ST   -Y,R17
00016e 930a      	ST   -Y,R16
00016f 940e 0296 	CALL SUBOPT_0xC
                +
000171 e5e0     +LDI R30 , LOW ( 0xC2AEAC50 )
000172 eafc     +LDI R31 , HIGH ( 0xC2AEAC50 )
000173 ea6e     +LDI R22 , BYTE3 ( 0xC2AEAC50 )
000174 ec72     +LDI R23 , BYTE4 ( 0xC2AEAC50 )
                 	__GETD1N 0xC2AEAC50
000175 940e 0461 	CALL __CMPF12
000177 f418      	BRSH _0x202000F
000178 940e 029b 	CALL SUBOPT_0xD
00017a c085      	RJMP _0x20A0002
                 _0x202000F:
                +
00017b 85ea     +LDD R30 , Y + 10
00017c 85fb     +LDD R31 , Y + 10 + 1
00017d 856c     +LDD R22 , Y + 10 + 2
00017e 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00017f 940e 04b9 	CALL __CPD10
000181 f429      	BRNE _0x2020010
                +
000182 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000183 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000184 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000185 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000186 c079      	RJMP _0x20A0002
                 _0x2020010:
000187 940e 0296 	CALL SUBOPT_0xC
                +
000189 e1e8     +LDI R30 , LOW ( 0x42B17218 )
00018a e7f2     +LDI R31 , HIGH ( 0x42B17218 )
00018b eb61     +LDI R22 , BYTE3 ( 0x42B17218 )
00018c e472     +LDI R23 , BYTE4 ( 0x42B17218 )
                 	__GETD1N 0x42B17218
00018d 940e 0461 	CALL __CMPF12
00018f f009      	BREQ PC+2
000190 f408      	BRCC PC+2
000191 c005      	RJMP _0x2020011
                +
000192 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
000193 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
000194 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
000195 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
000196 c069      	RJMP _0x20A0002
                 _0x2020011:
000197 940e 0296 	CALL SUBOPT_0xC
                +
000199 e3eb     +LDI R30 , LOW ( 0x3FB8AA3B )
00019a eafa     +LDI R31 , HIGH ( 0x3FB8AA3B )
00019b eb68     +LDI R22 , BYTE3 ( 0x3FB8AA3B )
00019c e37f     +LDI R23 , BYTE4 ( 0x3FB8AA3B )
                 	__GETD1N 0x3FB8AA3B
00019d 940e 03ce 	CALL __MULF12
                +
00019f 87ea     +STD Y + 10 , R30
0001a0 87fb     +STD Y + 10 + 1 , R31
0001a1 876c     +STD Y + 10 + 2 , R22
0001a2 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0001a3 940e 0296 	CALL SUBOPT_0xC
0001a5 df2b      	RCALL _floor
0001a6 940e 030d 	CALL __CFD1
0001a8 018f      	MOVW R16,R30
0001a9 940e 0296 	CALL SUBOPT_0xC
0001ab 940e 0489 	CALL __CWD1
0001ad 940e 0344 	CALL __CDF1
0001af 940e 028c 	CALL SUBOPT_0xA
0001b1 01df      	MOVW R26,R30
0001b2 01cb      	MOVW R24,R22
                +
0001b3 e0e0     +LDI R30 , LOW ( 0x3F000000 )
0001b4 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
0001b5 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
0001b6 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
0001b7 940e 028c 	CALL SUBOPT_0xA
0001b9 940e 0279 	CALL SUBOPT_0x6
0001bb 940e 027e 	CALL SUBOPT_0x7
0001bd 940e 0280 	CALL SUBOPT_0x8
                +
0001bf e6ad     +LDI R26 , LOW ( 0x3D6C4C6D )
0001c0 e4bc     +LDI R27 , HIGH ( 0x3D6C4C6D )
0001c1 e68c     +LDI R24 , BYTE3 ( 0x3D6C4C6D )
0001c2 e39d     +LDI R25 , BYTE4 ( 0x3D6C4C6D )
                 	__GETD2N 0x3D6C4C6D
0001c3 940e 03ce 	CALL __MULF12
                +
0001c5 eaa6     +LDI R26 , LOW ( 0x40E6E3A6 )
0001c6 eeb3     +LDI R27 , HIGH ( 0x40E6E3A6 )
0001c7 ee86     +LDI R24 , BYTE3 ( 0x40E6E3A6 )
0001c8 e490     +LDI R25 , BYTE4 ( 0x40E6E3A6 )
                 	__GETD2N 0x40E6E3A6
0001c9 940e 037e 	CALL __ADDF12
0001cb 940e 026f 	CALL SUBOPT_0x4
0001cd 940e 03ce 	CALL __MULF12
0001cf 940e 0279 	CALL SUBOPT_0x6
0001d1 940e 0291 	CALL SUBOPT_0xB
                +
0001d3 e2a8     +LDI R26 , LOW ( 0x41A68D28 )
0001d4 e8bd     +LDI R27 , HIGH ( 0x41A68D28 )
0001d5 ea86     +LDI R24 , BYTE3 ( 0x41A68D28 )
0001d6 e491     +LDI R25 , BYTE4 ( 0x41A68D28 )
                 	__GETD2N 0x41A68D28
0001d7 940e 037e 	CALL __ADDF12
                +
0001d9 83ea     +STD Y + 2 , R30
0001da 83fb     +STD Y + 2 + 1 , R31
0001db 836c     +STD Y + 2 + 2 , R22
0001dc 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
0001dd 940e 0274 	CALL SUBOPT_0x5
                +
0001df 81aa     +LDD R26 , Y + 2
0001e0 81bb     +LDD R27 , Y + 2 + 1
0001e1 818c     +LDD R24 , Y + 2 + 2
0001e2 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
0001e3 940e 037e 	CALL __ADDF12
                +
0001e5 efa3     +LDI R26 , LOW ( 0x3FB504F3 )
0001e6 e0b4     +LDI R27 , HIGH ( 0x3FB504F3 )
0001e7 eb85     +LDI R24 , BYTE3 ( 0x3FB504F3 )
0001e8 e39f     +LDI R25 , BYTE4 ( 0x3FB504F3 )
                 	__GETD2N 0x3FB504F3
0001e9 940e 03ce 	CALL __MULF12
0001eb 937f      	PUSH R23
0001ec 936f      	PUSH R22
0001ed 93ff      	PUSH R31
0001ee 93ef      	PUSH R30
0001ef 940e 026f 	CALL SUBOPT_0x4
0001f1 940e 0291 	CALL SUBOPT_0xB
0001f3 940e 0377 	CALL __SUBF12
0001f5 91af      	POP  R26
0001f6 91bf      	POP  R27
0001f7 918f      	POP  R24
0001f8 919f      	POP  R25
0001f9 940e 041c 	CALL __DIVF21
0001fb 940e 04a2 	CALL __PUTPARD1
0001fd 01d8      	MOVW R26,R16
0001fe 940e 02cc 	CALL _ldexp
                 _0x20A0002:
000200 8119      	LDD  R17,Y+1
000201 8108      	LDD  R16,Y+0
000202 962e      	ADIW R28,14
000203 9508      	RET
                 ; .FEND
                 _pow:
                 ; .FSTART _pow
000204 940e 04a7 	CALL __PUTPARD2
000206 9724      	SBIW R28,4
000207 940e 02a0 	CALL SUBOPT_0xE
000209 940e 04b9 	CALL __CPD10
00020b f419      	BRNE _0x2020012
00020c 940e 029b 	CALL SUBOPT_0xD
00020e c045      	RJMP _0x20A0001
                 _0x2020012:
                +
00020f 85a8     +LDD R26 , Y + 8
000210 85b9     +LDD R27 , Y + 8 + 1
000211 858a     +LDD R24 , Y + 8 + 2
000212 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000213 940e 04bd 	CALL __CPD02
000215 f494      	BRGE _0x2020013
000216 940e 02a5 	CALL SUBOPT_0xF
000218 940e 04b9 	CALL __CPD10
00021a f429      	BRNE _0x2020014
                +
00021b e0e0     +LDI R30 , LOW ( 0x3F800000 )
00021c e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00021d e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00021e e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00021f c034      	RJMP _0x20A0001
                 _0x2020014:
                +
000220 85a8     +LDD R26 , Y + 8
000221 85b9     +LDD R27 , Y + 8 + 1
000222 858a     +LDD R24 , Y + 8 + 2
000223 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
000224 940e 02aa 	CALL SUBOPT_0x10
000226 df43      	RCALL _exp
000227 c02c      	RJMP _0x20A0001
                 _0x2020013:
000228 940e 02a5 	CALL SUBOPT_0xF
00022a 01de      	MOVW R26,R28
00022b 940e 030d 	CALL __CFD1
00022d 940e 048e 	CALL __PUTDP1
00022f 940e 0265 	CALL SUBOPT_0x2
000231 940e 0344 	CALL __CDF1
000233 01df      	MOVW R26,R30
000234 01cb      	MOVW R24,R22
000235 940e 02a5 	CALL SUBOPT_0xF
000237 940e 04c3 	CALL __CPD12
000239 f019      	BREQ _0x2020015
00023a 940e 029b 	CALL SUBOPT_0xD
00023c c017      	RJMP _0x20A0001
                 _0x2020015:
00023d 940e 02a0 	CALL SUBOPT_0xE
00023f 940e 02d8 	CALL __ANEGF1
000241 01df      	MOVW R26,R30
000242 01cb      	MOVW R24,R22
000243 940e 02aa 	CALL SUBOPT_0x10
000245 df24      	RCALL _exp
                +
000246 87e8     +STD Y + 8 , R30
000247 87f9     +STD Y + 8 + 1 , R31
000248 876a     +STD Y + 8 + 2 , R22
000249 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00024a 81e8      	LD   R30,Y
00024b 70e1      	ANDI R30,LOW(0x1)
00024c f419      	BRNE _0x2020016
00024d 940e 02a0 	CALL SUBOPT_0xE
00024f c004      	RJMP _0x20A0001
                 _0x2020016:
000250 940e 02a0 	CALL SUBOPT_0xE
000252 940e 02d8 	CALL __ANEGF1
                 _0x20A0001:
000254 962c      	ADIW R28,12
000255 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __seed_G104:
000260           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x0:
                +
000256 e0e0     +LDI R30 , LOW ( 0x40000000 )
000257 e0f0     +LDI R31 , HIGH ( 0x40000000 )
000258 e060     +LDI R22 , BYTE3 ( 0x40000000 )
000259 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
00025a 940e 04a2 	CALL __PUTPARD1
00025c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
00025d 940e 0489 	CALL __CWD1
00025f 940e 0344 	CALL __CDF1
000261 01df      	MOVW R26,R30
000262 01cb      	MOVW R24,R22
000263 940c 0204 	JMP  _pow
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
000265 940e 0493 	CALL __GETD1S0
000267 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
                +
000268 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000269 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00026a e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00026b e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00026c 940e 0377 	CALL __SUBF12
00026e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x4:
                +
00026f 81ae     +LDD R26 , Y + 6
000270 81bf     +LDD R27 , Y + 6 + 1
000271 8588     +LDD R24 , Y + 6 + 2
000272 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
000273 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
                +
000274 81ee     +LDD R30 , Y + 6
000275 81ff     +LDD R31 , Y + 6 + 1
000276 8568     +LDD R22 , Y + 6 + 2
000277 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
000278 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
                +
000279 83ee     +STD Y + 6 , R30
00027a 83ff     +STD Y + 6 + 1 , R31
00027b 8768     +STD Y + 6 + 2 , R22
00027c 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00027d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
00027e dff5      	RCALL SUBOPT_0x5
00027f cfef      	RJMP SUBOPT_0x4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
000280 940e 03ce 	CALL __MULF12
                +
000282 83ea     +STD Y + 2 , R30
000283 83fb     +STD Y + 2 + 1 , R31
000284 836c     +STD Y + 2 + 2 , R22
000285 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000286 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000287 940e 03ce 	CALL __MULF12
000289 01df      	MOVW R26,R30
00028a 01cb      	MOVW R24,R22
00028b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
00028c 940e 04ac 	CALL __SWAPD12
00028e 940e 0377 	CALL __SUBF12
000290 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
000291 81ea     +LDD R30 , Y + 2
000292 81fb     +LDD R31 , Y + 2 + 1
000293 816c     +LDD R22 , Y + 2 + 2
000294 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
000295 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC:
                +
000296 85aa     +LDD R26 , Y + 10
000297 85bb     +LDD R27 , Y + 10 + 1
000298 858c     +LDD R24 , Y + 10 + 2
000299 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00029a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xD:
                +
00029b e0e0     +LDI R30 , LOW ( 0x0 )
00029c e0f0     +LDI R31 , HIGH ( 0x0 )
00029d e060     +LDI R22 , BYTE3 ( 0x0 )
00029e e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00029f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
                +
0002a0 85e8     +LDD R30 , Y + 8
0002a1 85f9     +LDD R31 , Y + 8 + 1
0002a2 856a     +LDD R22 , Y + 8 + 2
0002a3 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
0002a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF:
                +
0002a5 81ec     +LDD R30 , Y + 4
0002a6 81fd     +LDD R31 , Y + 4 + 1
0002a7 816e     +LDD R22 , Y + 4 + 2
0002a8 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
0002a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
0002aa 940e 00e4 	CALL _log
                +
0002ac 81ac     +LDD R26 , Y + 4
0002ad 81bd     +LDD R27 , Y + 4 + 1
0002ae 818e     +LDD R24 , Y + 4 + 2
0002af 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
0002b0 cfd6      	RJMP SUBOPT_0x9
                 
                 
                 	.CSEG
                 _delay_ms:
0002b1 9610      	adiw r26,0
0002b2 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0002b3 ef8a     +LDI R24 , LOW ( 0xFA )
0002b4 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0002b5 9701     +SBIW R24 , 1
0002b6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0002b7 95a8      	wdr
0002b8 9711      	sbiw r26,1
0002b9 f7c9      	brne __delay_ms0
                 __delay_ms1:
0002ba 9508      	ret
                 
                 _frexp:
0002bb 91e9      	LD   R30,Y+
0002bc 91f9      	LD   R31,Y+
0002bd 9169      	LD   R22,Y+
0002be 9179      	LD   R23,Y+
0002bf fb77      	BST  R23,7
0002c0 0f66      	LSL  R22
0002c1 1f77      	ROL  R23
0002c2 2788      	CLR  R24
0002c3 577e      	SUBI R23,0x7E
0002c4 0b88      	SBC  R24,R24
0002c5 937d      	ST   X+,R23
0002c6 938c      	ST   X,R24
0002c7 e77e      	LDI  R23,0x7E
0002c8 9576      	LSR  R23
0002c9 9567      	ROR  R22
0002ca f06e      	BRTS __ANEGF1
0002cb 9508      	RET
                 
                 _ldexp:
0002cc 91e9      	LD   R30,Y+
0002cd 91f9      	LD   R31,Y+
0002ce 9169      	LD   R22,Y+
0002cf 9179      	LD   R23,Y+
0002d0 fb77      	BST  R23,7
0002d1 0f66      	LSL  R22
0002d2 1f77      	ROL  R23
0002d3 0f7a      	ADD  R23,R26
0002d4 9576      	LSR  R23
0002d5 9567      	ROR  R22
0002d6 f00e      	BRTS __ANEGF1
0002d7 9508      	RET
                 
                 __ANEGF1:
0002d8 9730      	SBIW R30,0
0002d9 4060      	SBCI R22,0
0002da 4070      	SBCI R23,0
0002db f009      	BREQ __ANEGF10
0002dc 5870      	SUBI R23,0x80
                 __ANEGF10:
0002dd 9508      	RET
                 
                 __ROUND_REPACK:
0002de 2355      	TST  R21
0002df f442      	BRPL __REPACK
0002e0 3850      	CPI  R21,0x80
0002e1 f411      	BRNE __ROUND_REPACK0
0002e2 ffe0      	SBRS R30,0
0002e3 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
0002e4 9631      	ADIW R30,1
0002e5 1f69      	ADC  R22,R25
0002e6 1f79      	ADC  R23,R25
0002e7 f06b      	BRVS __REPACK1
                 
                 __REPACK:
0002e8 e850      	LDI  R21,0x80
0002e9 2757      	EOR  R21,R23
0002ea f411      	BRNE __REPACK0
0002eb 935f      	PUSH R21
0002ec c0cf      	RJMP __ZERORES
                 __REPACK0:
0002ed 3f5f      	CPI  R21,0xFF
0002ee f031      	BREQ __REPACK1
0002ef 0f66      	LSL  R22
0002f0 0c00      	LSL  R0
0002f1 9557      	ROR  R21
0002f2 9567      	ROR  R22
0002f3 2f75      	MOV  R23,R21
0002f4 9508      	RET
                 __REPACK1:
0002f5 935f      	PUSH R21
0002f6 2000      	TST  R0
0002f7 f00a      	BRMI __REPACK2
0002f8 c0cf      	RJMP __MAXRES
                 __REPACK2:
0002f9 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
0002fa e850      	LDI  R21,0x80
0002fb 2e19      	MOV  R1,R25
0002fc 2215      	AND  R1,R21
0002fd 0f88      	LSL  R24
0002fe 1f99      	ROL  R25
0002ff 2795      	EOR  R25,R21
000300 0f55      	LSL  R21
000301 9587      	ROR  R24
                 
                 __UNPACK1:
000302 e850      	LDI  R21,0x80
000303 2e07      	MOV  R0,R23
000304 2205      	AND  R0,R21
000305 0f66      	LSL  R22
000306 1f77      	ROL  R23
000307 2775      	EOR  R23,R21
000308 0f55      	LSL  R21
000309 9567      	ROR  R22
00030a 9508      	RET
                 
                 __CFD1U:
00030b 9468      	SET
00030c c001      	RJMP __CFD1U0
                 __CFD1:
00030d 94e8      	CLT
                 __CFD1U0:
00030e 935f      	PUSH R21
00030f dff2      	RCALL __UNPACK1
000310 3870      	CPI  R23,0x80
000311 f018      	BRLO __CFD10
000312 3f7f      	CPI  R23,0xFF
000313 f408      	BRCC __CFD10
000314 c0a7      	RJMP __ZERORES
                 __CFD10:
000315 e156      	LDI  R21,22
000316 1b57      	SUB  R21,R23
000317 f4aa      	BRPL __CFD11
000318 9551      	NEG  R21
000319 3058      	CPI  R21,8
00031a f40e      	BRTC __CFD19
00031b 3059      	CPI  R21,9
                 __CFD19:
00031c f030      	BRLO __CFD17
00031d efef      	SER  R30
00031e efff      	SER  R31
00031f ef6f      	SER  R22
000320 e77f      	LDI  R23,0x7F
000321 f977      	BLD  R23,7
000322 c01a      	RJMP __CFD15
                 __CFD17:
000323 2777      	CLR  R23
000324 2355      	TST  R21
000325 f0b9      	BREQ __CFD15
                 __CFD18:
000326 0fee      	LSL  R30
000327 1fff      	ROL  R31
000328 1f66      	ROL  R22
000329 1f77      	ROL  R23
00032a 955a      	DEC  R21
00032b f7d1      	BRNE __CFD18
00032c c010      	RJMP __CFD15
                 __CFD11:
00032d 2777      	CLR  R23
                 __CFD12:
00032e 3058      	CPI  R21,8
00032f f028      	BRLO __CFD13
000330 2fef      	MOV  R30,R31
000331 2ff6      	MOV  R31,R22
000332 2f67      	MOV  R22,R23
000333 5058      	SUBI R21,8
000334 cff9      	RJMP __CFD12
                 __CFD13:
000335 2355      	TST  R21
000336 f031      	BREQ __CFD15
                 __CFD14:
000337 9576      	LSR  R23
000338 9567      	ROR  R22
000339 95f7      	ROR  R31
00033a 95e7      	ROR  R30
00033b 955a      	DEC  R21
00033c f7d1      	BRNE __CFD14
                 __CFD15:
00033d 2000      	TST  R0
00033e f40a      	BRPL __CFD16
00033f d141      	RCALL __ANEGD1
                 __CFD16:
000340 915f      	POP  R21
000341 9508      	RET
                 
                 __CDF1U:
000342 9468      	SET
000343 c001      	RJMP __CDF1U0
                 __CDF1:
000344 94e8      	CLT
                 __CDF1U0:
000345 9730      	SBIW R30,0
000346 4060      	SBCI R22,0
000347 4070      	SBCI R23,0
000348 f0b1      	BREQ __CDF10
000349 2400      	CLR  R0
00034a f026      	BRTS __CDF11
00034b 2377      	TST  R23
00034c f412      	BRPL __CDF11
00034d 9400      	COM  R0
00034e d132      	RCALL __ANEGD1
                 __CDF11:
00034f 2e17      	MOV  R1,R23
000350 e17e      	LDI  R23,30
000351 2011      	TST  R1
                 __CDF12:
000352 f032      	BRMI __CDF13
000353 957a      	DEC  R23
000354 0fee      	LSL  R30
000355 1fff      	ROL  R31
000356 1f66      	ROL  R22
000357 1c11      	ROL  R1
000358 cff9      	RJMP __CDF12
                 __CDF13:
000359 2fef      	MOV  R30,R31
00035a 2ff6      	MOV  R31,R22
00035b 2d61      	MOV  R22,R1
00035c 935f      	PUSH R21
00035d df8a      	RCALL __REPACK
00035e 915f      	POP  R21
                 __CDF10:
00035f 9508      	RET
                 
                 __SWAPACC:
000360 934f      	PUSH R20
000361 01af      	MOVW R20,R30
000362 01fd      	MOVW R30,R26
000363 01da      	MOVW R26,R20
000364 01ab      	MOVW R20,R22
000365 01bc      	MOVW R22,R24
000366 01ca      	MOVW R24,R20
000367 2d40      	MOV  R20,R0
000368 2c01      	MOV  R0,R1
000369 2e14      	MOV  R1,R20
00036a 914f      	POP  R20
00036b 9508      	RET
                 
                 __UADD12:
00036c 0fea      	ADD  R30,R26
00036d 1ffb      	ADC  R31,R27
00036e 1f68      	ADC  R22,R24
00036f 9508      	RET
                 
                 __NEGMAN1:
000370 95e0      	COM  R30
000371 95f0      	COM  R31
000372 9560      	COM  R22
000373 5fef      	SUBI R30,-1
000374 4fff      	SBCI R31,-1
000375 4f6f      	SBCI R22,-1
000376 9508      	RET
                 
                 __SUBF12:
000377 935f      	PUSH R21
000378 df81      	RCALL __UNPACK
000379 3890      	CPI  R25,0x80
00037a f171      	BREQ __ADDF129
00037b e850      	LDI  R21,0x80
00037c 2615      	EOR  R1,R21
                 
00037d c004      	RJMP __ADDF120
                 
                 __ADDF12:
00037e 935f      	PUSH R21
00037f df7a      	RCALL __UNPACK
000380 3890      	CPI  R25,0x80
000381 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000382 3870      	CPI  R23,0x80
000383 f121      	BREQ __ADDF128
                 __ADDF121:
000384 2f57      	MOV  R21,R23
000385 1b59      	SUB  R21,R25
000386 f12b      	BRVS __ADDF1211
000387 f412      	BRPL __ADDF122
000388 dfd7      	RCALL __SWAPACC
000389 cffa      	RJMP __ADDF121
                 __ADDF122:
00038a 3158      	CPI  R21,24
00038b f018      	BRLO __ADDF123
00038c 27aa      	CLR  R26
00038d 27bb      	CLR  R27
00038e 2788      	CLR  R24
                 __ADDF123:
00038f 3058      	CPI  R21,8
000390 f028      	BRLO __ADDF124
000391 2fab      	MOV  R26,R27
000392 2fb8      	MOV  R27,R24
000393 2788      	CLR  R24
000394 5058      	SUBI R21,8
000395 cff9      	RJMP __ADDF123
                 __ADDF124:
000396 2355      	TST  R21
000397 f029      	BREQ __ADDF126
                 __ADDF125:
000398 9586      	LSR  R24
000399 95b7      	ROR  R27
00039a 95a7      	ROR  R26
00039b 955a      	DEC  R21
00039c f7d9      	BRNE __ADDF125
                 __ADDF126:
00039d 2d50      	MOV  R21,R0
00039e 2551      	EOR  R21,R1
00039f f072      	BRMI __ADDF127
0003a0 dfcb      	RCALL __UADD12
0003a1 f438      	BRCC __ADDF129
0003a2 9567      	ROR  R22
0003a3 95f7      	ROR  R31
0003a4 95e7      	ROR  R30
0003a5 9573      	INC  R23
0003a6 f413      	BRVC __ADDF129
0003a7 c020      	RJMP __MAXRES
                 __ADDF128:
0003a8 dfb7      	RCALL __SWAPACC
                 __ADDF129:
0003a9 df3e      	RCALL __REPACK
0003aa 915f      	POP  R21
0003ab 9508      	RET
                 __ADDF1211:
0003ac f7d8      	BRCC __ADDF128
0003ad cffb      	RJMP __ADDF129
                 __ADDF127:
0003ae 1bea      	SUB  R30,R26
0003af 0bfb      	SBC  R31,R27
0003b0 0b68      	SBC  R22,R24
0003b1 f051      	BREQ __ZERORES
0003b2 f410      	BRCC __ADDF1210
0003b3 9400      	COM  R0
0003b4 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
0003b5 2366      	TST  R22
0003b6 f392      	BRMI __ADDF129
0003b7 0fee      	LSL  R30
0003b8 1fff      	ROL  R31
0003b9 1f66      	ROL  R22
0003ba 957a      	DEC  R23
0003bb f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
0003bc 27ee      	CLR  R30
0003bd 27ff      	CLR  R31
0003be 2766      	CLR  R22
0003bf 2777      	CLR  R23
0003c0 915f      	POP  R21
0003c1 9508      	RET
                 
                 __MINRES:
0003c2 efef      	SER  R30
0003c3 efff      	SER  R31
0003c4 e76f      	LDI  R22,0x7F
0003c5 ef7f      	SER  R23
0003c6 915f      	POP  R21
0003c7 9508      	RET
                 
                 __MAXRES:
0003c8 efef      	SER  R30
0003c9 efff      	SER  R31
0003ca e76f      	LDI  R22,0x7F
0003cb e77f      	LDI  R23,0x7F
0003cc 915f      	POP  R21
0003cd 9508      	RET
                 
                 __MULF12:
0003ce 935f      	PUSH R21
0003cf df2a      	RCALL __UNPACK
0003d0 3870      	CPI  R23,0x80
0003d1 f351      	BREQ __ZERORES
0003d2 3890      	CPI  R25,0x80
0003d3 f341      	BREQ __ZERORES
0003d4 2401      	EOR  R0,R1
0003d5 9408      	SEC
0003d6 1f79      	ADC  R23,R25
0003d7 f423      	BRVC __MULF124
0003d8 f31c      	BRLT __ZERORES
                 __MULF125:
0003d9 2000      	TST  R0
0003da f33a      	BRMI __MINRES
0003db cfec      	RJMP __MAXRES
                 __MULF124:
0003dc 920f      	PUSH R0
0003dd 931f      	PUSH R17
0003de 932f      	PUSH R18
0003df 933f      	PUSH R19
0003e0 934f      	PUSH R20
0003e1 2711      	CLR  R17
0003e2 2722      	CLR  R18
0003e3 2799      	CLR  R25
0003e4 9f68      	MUL  R22,R24
0003e5 01a0      	MOVW R20,R0
0003e6 9f8f      	MUL  R24,R31
0003e7 2d30      	MOV  R19,R0
0003e8 0d41      	ADD  R20,R1
0003e9 1f59      	ADC  R21,R25
0003ea 9f6b      	MUL  R22,R27
0003eb 0d30      	ADD  R19,R0
0003ec 1d41      	ADC  R20,R1
0003ed 1f59      	ADC  R21,R25
0003ee 9f8e      	MUL  R24,R30
0003ef d027      	RCALL __MULF126
0003f0 9fbf      	MUL  R27,R31
0003f1 d025      	RCALL __MULF126
0003f2 9f6a      	MUL  R22,R26
0003f3 d023      	RCALL __MULF126
0003f4 9fbe      	MUL  R27,R30
0003f5 d01d      	RCALL __MULF127
0003f6 9faf      	MUL  R26,R31
0003f7 d01b      	RCALL __MULF127
0003f8 9fae      	MUL  R26,R30
0003f9 0d11      	ADD  R17,R1
0003fa 1f29      	ADC  R18,R25
0003fb 1f39      	ADC  R19,R25
0003fc 1f49      	ADC  R20,R25
0003fd 1f59      	ADC  R21,R25
0003fe 2fe3      	MOV  R30,R19
0003ff 2ff4      	MOV  R31,R20
000400 2f65      	MOV  R22,R21
000401 2f52      	MOV  R21,R18
000402 914f      	POP  R20
000403 913f      	POP  R19
000404 912f      	POP  R18
000405 911f      	POP  R17
000406 900f      	POP  R0
000407 2366      	TST  R22
000408 f02a      	BRMI __MULF122
000409 0f55      	LSL  R21
00040a 1fee      	ROL  R30
00040b 1fff      	ROL  R31
00040c 1f66      	ROL  R22
00040d c002      	RJMP __MULF123
                 __MULF122:
00040e 9573      	INC  R23
00040f f24b      	BRVS __MULF125
                 __MULF123:
000410 decd      	RCALL __ROUND_REPACK
000411 915f      	POP  R21
000412 9508      	RET
                 
                 __MULF127:
000413 0d10      	ADD  R17,R0
000414 1d21      	ADC  R18,R1
000415 1f39      	ADC  R19,R25
000416 c002      	RJMP __MULF128
                 __MULF126:
000417 0d20      	ADD  R18,R0
000418 1d31      	ADC  R19,R1
                 __MULF128:
000419 1f49      	ADC  R20,R25
00041a 1f59      	ADC  R21,R25
00041b 9508      	RET
                 
                 __DIVF21:
00041c 935f      	PUSH R21
00041d dedc      	RCALL __UNPACK
00041e 3870      	CPI  R23,0x80
00041f f421      	BRNE __DIVF210
000420 2011      	TST  R1
                 __DIVF211:
000421 f40a      	BRPL __DIVF219
000422 cf9f      	RJMP __MINRES
                 __DIVF219:
000423 cfa4      	RJMP __MAXRES
                 __DIVF210:
000424 3890      	CPI  R25,0x80
000425 f409      	BRNE __DIVF218
                 __DIVF217:
000426 cf95      	RJMP __ZERORES
                 __DIVF218:
000427 2401      	EOR  R0,R1
000428 9408      	SEC
000429 0b97      	SBC  R25,R23
00042a f41b      	BRVC __DIVF216
00042b f3d4      	BRLT __DIVF217
00042c 2000      	TST  R0
00042d cff3      	RJMP __DIVF211
                 __DIVF216:
00042e 2f79      	MOV  R23,R25
00042f 931f      	PUSH R17
000430 932f      	PUSH R18
000431 933f      	PUSH R19
000432 934f      	PUSH R20
000433 2411      	CLR  R1
000434 2711      	CLR  R17
000435 2722      	CLR  R18
000436 2733      	CLR  R19
000437 2744      	CLR  R20
000438 2755      	CLR  R21
000439 e290      	LDI  R25,32
                 __DIVF212:
00043a 17ae      	CP   R26,R30
00043b 07bf      	CPC  R27,R31
00043c 0786      	CPC  R24,R22
00043d 0741      	CPC  R20,R17
00043e f030      	BRLO __DIVF213
00043f 1bae      	SUB  R26,R30
000440 0bbf      	SBC  R27,R31
000441 0b86      	SBC  R24,R22
000442 0b41      	SBC  R20,R17
000443 9408      	SEC
000444 c001      	RJMP __DIVF214
                 __DIVF213:
000445 9488      	CLC
                 __DIVF214:
000446 1f55      	ROL  R21
000447 1f22      	ROL  R18
000448 1f33      	ROL  R19
000449 1c11      	ROL  R1
00044a 1faa      	ROL  R26
00044b 1fbb      	ROL  R27
00044c 1f88      	ROL  R24
00044d 1f44      	ROL  R20
00044e 959a      	DEC  R25
00044f f751      	BRNE __DIVF212
000450 01f9      	MOVW R30,R18
000451 2d61      	MOV  R22,R1
000452 914f      	POP  R20
000453 913f      	POP  R19
000454 912f      	POP  R18
000455 911f      	POP  R17
000456 2366      	TST  R22
000457 f032      	BRMI __DIVF215
000458 0f55      	LSL  R21
000459 1fee      	ROL  R30
00045a 1fff      	ROL  R31
00045b 1f66      	ROL  R22
00045c 957a      	DEC  R23
00045d f243      	BRVS __DIVF217
                 __DIVF215:
00045e de7f      	RCALL __ROUND_REPACK
00045f 915f      	POP  R21
000460 9508      	RET
                 
                 __CMPF12:
000461 2399      	TST  R25
000462 f09a      	BRMI __CMPF120
000463 2377      	TST  R23
000464 f042      	BRMI __CMPF121
000465 1797      	CP   R25,R23
000466 f048      	BRLO __CMPF122
000467 f429      	BRNE __CMPF121
000468 17ae      	CP   R26,R30
000469 07bf      	CPC  R27,R31
00046a 0786      	CPC  R24,R22
00046b f020      	BRLO __CMPF122
00046c f031      	BREQ __CMPF123
                 __CMPF121:
00046d 9498      	CLZ
00046e 9488      	CLC
00046f 9508      	RET
                 __CMPF122:
000470 9498      	CLZ
000471 9408      	SEC
000472 9508      	RET
                 __CMPF123:
000473 9418      	SEZ
000474 9488      	CLC
000475 9508      	RET
                 __CMPF120:
000476 2377      	TST  R23
000477 f7c2      	BRPL __CMPF122
000478 1797      	CP   R25,R23
000479 f398      	BRLO __CMPF121
00047a f7a9      	BRNE __CMPF122
00047b 17ea      	CP   R30,R26
00047c 07fb      	CPC  R31,R27
00047d 0768      	CPC  R22,R24
00047e f388      	BRLO __CMPF122
00047f f399      	BREQ __CMPF123
000480 cfec      	RJMP __CMPF121
                 
                 __ANEGD1:
000481 95f0      	COM  R31
000482 9560      	COM  R22
000483 9570      	COM  R23
000484 95e1      	NEG  R30
000485 4fff      	SBCI R31,-1
000486 4f6f      	SBCI R22,-1
000487 4f7f      	SBCI R23,-1
000488 9508      	RET
                 
                 __CWD1:
000489 2f6f      	MOV  R22,R31
00048a 0f66      	ADD  R22,R22
00048b 0b66      	SBC  R22,R22
00048c 2f76      	MOV  R23,R22
00048d 9508      	RET
                 
                 __PUTDP1:
00048e 93ed      	ST   X+,R30
00048f 93fd      	ST   X+,R31
000490 936d      	ST   X+,R22
000491 937c      	ST   X,R23
000492 9508      	RET
                 
                 __GETD1S0:
000493 81e8      	LD   R30,Y
000494 81f9      	LDD  R31,Y+1
000495 816a      	LDD  R22,Y+2
000496 817b      	LDD  R23,Y+3
000497 9508      	RET
                 
                 __GETD2S0:
000498 81a8      	LD   R26,Y
000499 81b9      	LDD  R27,Y+1
00049a 818a      	LDD  R24,Y+2
00049b 819b      	LDD  R25,Y+3
00049c 9508      	RET
                 
                 __PUTD1S0:
00049d 83e8      	ST   Y,R30
00049e 83f9      	STD  Y+1,R31
00049f 836a      	STD  Y+2,R22
0004a0 837b      	STD  Y+3,R23
0004a1 9508      	RET
                 
                 __PUTPARD1:
0004a2 937a      	ST   -Y,R23
0004a3 936a      	ST   -Y,R22
0004a4 93fa      	ST   -Y,R31
0004a5 93ea      	ST   -Y,R30
0004a6 9508      	RET
                 
                 __PUTPARD2:
0004a7 939a      	ST   -Y,R25
0004a8 938a      	ST   -Y,R24
0004a9 93ba      	ST   -Y,R27
0004aa 93aa      	ST   -Y,R26
0004ab 9508      	RET
                 
                 __SWAPD12:
0004ac 2e18      	MOV  R1,R24
0004ad 2f86      	MOV  R24,R22
0004ae 2d61      	MOV  R22,R1
0004af 2e19      	MOV  R1,R25
0004b0 2f97      	MOV  R25,R23
0004b1 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
0004b2 2e1b      	MOV  R1,R27
0004b3 2fbf      	MOV  R27,R31
0004b4 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
0004b5 2e1a      	MOV  R1,R26
0004b6 2fae      	MOV  R26,R30
0004b7 2de1      	MOV  R30,R1
0004b8 9508      	RET
                 
                 __CPD10:
0004b9 9730      	SBIW R30,0
0004ba 4060      	SBCI R22,0
0004bb 4070      	SBCI R23,0
0004bc 9508      	RET
                 
                 __CPD02:
0004bd 2400      	CLR  R0
0004be 160a      	CP   R0,R26
0004bf 060b      	CPC  R0,R27
0004c0 0608      	CPC  R0,R24
0004c1 0609      	CPC  R0,R25
0004c2 9508      	RET
                 
                 __CPD12:
0004c3 17ea      	CP   R30,R26
0004c4 07fb      	CPC  R31,R27
0004c5 0768      	CPC  R22,R24
0004c6 0779      	CPC  R23,R25
0004c7 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  31 r1 :  30 r2 :   0 r3 :   0 r4 :   6 r5 :   3 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:  10 r17:  17 r18:  12 r19:  12 r20:  22 r21:  63 r22: 103 r23: 100 
r24:  67 r25:  64 r26:  63 r27:  50 r28:   9 r29:   1 r30: 109 r31:  77 
x  :   9 y  : 109 z  :   7 
Registers used: 23 out of 35 (65.7%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  17 add   :   8 
adiw  :   7 and   :   5 andi  :   1 asr   :   0 bclr  :   0 bld   :   2 
brbc  :   0 brbs  :   0 brcc  :   6 brcs  :   1 break :   0 breq  :  19 
brge  :   2 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  10 
brlt  :   3 brmi  :   9 brne  :  21 brpl  :   7 brsh  :   3 brtc  :   2 
brts  :   3 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  : 114 
cbi   :   0 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  33 cls   :   0 clt   :   3 clv   :   0 clz   :   2 com   :   8 
cp    :   9 cpc   :  17 cpi   :  17 cpse  :   0 dec   :   9 des   :   0 
eor   :   7 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   2 jmp   :  23 ld    :  16 ldd   :  57 ldi   : 120 
lds   :   0 lpm   :   7 lsl   :  14 lsr   :   5 mov   :  39 movw  :  28 
mul   :   9 muls  :   0 mulsu :   0 neg   :   2 nop   :   0 or    :   0 
ori   :   0 out   :   8 pop   :  40 push  :  40 rcall :  24 ret   :  52 
reti  :   0 rjmp  :  43 rol   :  26 ror   :  17 sbc   :   9 sbci  :  12 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :  12 sbr   :   2 sbrc  :   1 
sbrs  :   1 sec   :   5 seh   :   0 sei   :   0 sen   :   0 ser   :   8 
ses   :   0 set   :   2 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    :  22 std   :  23 sts   :   0 sub   :   5 subi  :   7 swap  :   0 
tst   :  17 wdr   :   1 
Instructions used: 71 out of 116 (61.2%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000990   2402     46   2448   32768   7.5%
[.dseg] 0x000060 0x000264      0      4      4    2048   0.2%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 4 warnings
